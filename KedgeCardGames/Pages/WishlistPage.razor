@page "/wishlist"
@using KedgeCardGames.Dtos.Interfaces
@using KedgeCardGames.Services
@attribute [Authorize]

<PageTitle>Lista de Desejos</PageTitle>

<MudBreadcrumbs Items="_items" Separator=">" />

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-8">
    <MudText Typo="Typo.h5" Class="mb-4">Minha Lista de Desejos</MudText>

    <MudGrid>
        @if (!wishlist.Any())
        {
            <MudIcon Icon="@Icons.Material.Filled.PlaylistRemove" Class="me-2 mt-4" Color="Color.Primary" />
            <MudText Class="mt-4">Você ainda não adicionou cartas à sua lista de desejos.</MudText>
        }
        else
        {
            @foreach (var carta in wishlist)
            {
                <MudItem xs="12" sm="4" md="2">
                        <MudCard>
                            <MudCardMedia Image="@carta.ImagemUrl" Height="350" Style="object-fit: contain;" />
                            <MudCardContent>
                                <MudText Typo="Typo.subtitle1">@carta.Nome</MudText>
                                <MudText Typo="Typo.caption">Jogo: @carta.Origem</MudText>
                                <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error"
                                               OnClick="@(() => Remover(carta))" />
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                }
            }
    </MudGrid>
</MudContainer>

@code {
        private List<ICartaDesejo> wishlist = new();

        protected override void OnInitialized()
        {
            wishlist = WishlistService.Cartas.ToList();
        }

        private void Remover(ICartaDesejo carta)
        {
            WishlistService.Remover(carta.Id, carta.Origem);
            wishlist = WishlistService.Cartas.ToList();
        }

        private List<BreadcrumbItem> _items = new()
    {
        new BreadcrumbItem("Home", href: null, true),
        new BreadcrumbItem("Lista de desejos", href: null, true)
    };
  }