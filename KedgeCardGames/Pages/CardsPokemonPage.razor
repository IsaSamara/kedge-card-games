@page "/cards-pokemon"
@inject IPokemonTcg _pokemonApi
@attribute [Authorize]

<PageTitle>Pokémon</PageTitle>

<MudContainer Class="mt-8" MaxWidth="MaxWidth.ExtraLarge">

    <MudTextField @bind-Value="_search" Label="Pesquisar" Variant="Variant.Outlined" Adornment="Adornment.End"
    AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Secondary" OnKeyUp="HandleKeyDown" />

    <div class="d-flex justify-center mt-4 mb-4">
        <MudPagination Color="Color.Primary" Count="@_totalPaginas"
        Selected="@_paginaAtual" SelectedChanged="TrocarPagina" />
    </div>

    <MudGrid>
        @if (cartas == null || !cartas.Any())
        {
            @for (int i = 0; i < 18; i++)
            {
                <CardSkeleton />
            }
        }
        else
        {
            @foreach (var carta in cartas)
            {
                <MudItem xs="2">
                    <MudCard Style="width: 100%;">
                        <MudCardMedia Image="@carta.Imagens.Grande" Height="350" Style="object-fit: cover;" />

                        <MudCardContent Style="display: flex; flex-direction: column; justify-content: space-between;">
                            <MudText Typo="Typo.subtitle1">@carta.Nome (@carta.Numero/@carta.Conjunto.Total)</MudText>

                            <MudGrid Class="d-flex align-items-center justify-space-between" Style="margin-top: 8px;">
                                <MudItem xs="6" Class="d-flex align-items-center">
                                    <MudIcon Icon="@Icons.Material.Filled.LocalOffer" Class="mr-1" />
                                    <MudText Typo="Typo.body2">@carta.Conjunto.Total un.</MudText>
                                </MudItem>

                                <MudItem xs="6" Class="d-flex align-items-center justify-end">
                                    <MudText Typo="Typo.body2">
                                        @((carta.MercadoCartas?.Precos?.MenorPreco ?? 0m).ToString("C"))
                                    </MudText>
                                </MudItem>
                            </MudGrid>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }
        }
    </MudGrid>

    <div class="d-flex justify-center mt-4 mb-4">
        <MudPagination Color="Color.Primary" Count="@_totalPaginas"
        Selected="@_paginaAtual" SelectedChanged="TrocarPagina" />
    </div>

</MudContainer>

@code {
    private List<CartaPokemonDto>? cartas = new();
    private int _paginaAtual = 1;
    private int _totalPaginas = 50;
    public string _search = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await CarregarPagina(_paginaAtual);
    }

    private async Task CarregarPagina(int pagina)
    {
        _search = _search.Replace(" ", "");
        string? query = string.IsNullOrEmpty(_search) ? null : $"name:{_search}";
        var resultado = await _pokemonApi.ObterCardsPokemon(pagina, 18, query);
        cartas = resultado.Cartas;
    }

    private async Task TrocarPagina(int novaPagina)
    {
        _paginaAtual = novaPagina;
        cartas = null;
        await CarregarPagina(_paginaAtual);
    }

    private async Task HandleKeyDown(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            _paginaAtual = 1;
            cartas = null;
            await CarregarPagina(_paginaAtual);
        }
    }
}
