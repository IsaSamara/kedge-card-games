@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager NavManager

@* Required *@
<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="CustomTheme" />
<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <a>
            <img src="logo.png" alt="Logo" style="height:60px; margin-left: 5px;" />
        </a>
         Card Games
        <MudSpacer />
            <MudToolbar>
            <MudMenu Label="YU-GI-OH!" EndIcon="@Icons.Material.Filled.ArrowDropDown" Color="Color.Inherit" Dense="true">
                    <MudMenuItem Href="cards-yugioh">Cartas</MudMenuItem>
                </MudMenu>

            <MudMenu Label="POKÉMON" EndIcon="@Icons.Material.Filled.ArrowDropDown" Color="Color.Inherit" Dense="true">
                    <MudMenuItem Href="cards-pokemon">Cartas</MudMenuItem>
                </MudMenu>

                <MudButton Href="ingressos" Color="Color.Inherit" Variant="Variant.Text">
                    INGRESSOS
                </MudButton>
            </MudToolbar>
        <MudToggleIconButton @bind-Toggled="@_isDarkMode"
                             Icon="@Icons.Material.Filled.DarkMode" Color="@Color.Default"
                             ToggledIcon="@Icons.Material.Filled.WbSunny" ToggledColor="@Color.Default" />

        @if (_isAuthenticated == false)
        {
            <MudButton Href="Login" Variant="Variant.Text" Color="Color.Inherit" StartIcon="@Icons.Material.Rounded.Login">
                Entrar
            </MudButton>
        }
        @if (_isAuthenticated)
        {
            <MudButton OnClick="Logout" Variant="Variant.Text" Color="Color.Inherit" StartIcon="@Icons.Material.Filled.Logout">
                Sair
            </MudButton>
        }
    </MudAppBar>

    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu />
    </MudDrawer>

    <MudMainContent Class="d-flex flex-column" Style="min-height: 100vh;">
        <MudStack Spacing="3" Class="flex-grow-1">
            @Body
        </MudStack>
        @* <Footer /> *@
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private bool _isAuthenticated = false;

    [CascadingParameter] private Task<AuthenticationState> AuthenticationStateTask { get; set; } = default!;

    protected override async Task OnParametersSetAsync()
    {
        var authState = await AuthenticationStateTask;
        _isAuthenticated = authState.User.Identity?.IsAuthenticated == true;
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void Logout()
    {
        ((AuthProvider)AuthProvider).MarkUserAsLoggedOut();
        NavManager.NavigateTo("home", true);
    }

    MudTheme CustomTheme = new MudTheme()
        {
            PaletteLight = new PaletteLight()
            {
                Primary = Colors.Indigo.Darken1,
                Secondary = Colors.Red.Darken2,
                Background = Colors.Indigo.Lighten5,
                DrawerBackground = Colors.Indigo.Lighten1,
                AppbarBackground = Colors.Indigo.Darken3,
                DrawerText = Colors.Indigo.Lighten5,
                DrawerIcon = Colors.Indigo.Lighten5
            },
            PaletteDark = new PaletteDark()
            {
                Primary = Colors.Indigo.Lighten2,
                Secondary = Colors.Red.Accent2,
                Background = Colors.Gray.Darken3,
                DrawerBackground = Colors.Indigo.Darken3,
                AppbarBackground = Colors.Indigo.Darken4,
                AppbarText = Colors.Gray.Lighten5,
                DrawerText = Colors.Gray.Lighten5,
                DrawerIcon = Colors.Gray.Lighten5,
                Surface = Colors.Gray.Darken4
            }
        };
}
